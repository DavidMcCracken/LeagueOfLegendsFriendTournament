// <auto-generated />
using System;
using LeagueOfLegendsFriendTournament.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeagueOfLegendsFriendTournament.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190903204857_AddedTournamentUser")]
    partial class AddedTournamentUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("LeagueOfLegendsFriendTournament.API.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("LeagueOfLegendsFriendTournament.API.Models.TournamentUser", b =>
                {
                    b.Property<int>("InTournamentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TournamentID");

                    b.Property<int>("UserID");

                    b.HasKey("InTournamentID");

                    b.ToTable("TournamentUsers");
                });

            modelBuilder.Entity("LeagueOfLegendsFriendTournament.API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("SaltedPassword");

                    b.Property<int?>("TournamentId");

                    b.Property<int>("TournamentsAssociated");

                    b.Property<int>("TournamentsLost");

                    b.Property<int>("TournamentsWon");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LeagueOfLegendsFriendTournament.API.Models.User", b =>
                {
                    b.HasOne("LeagueOfLegendsFriendTournament.API.Models.Tournament")
                        .WithMany("UsersInTournament")
                        .HasForeignKey("TournamentId");
                });
#pragma warning restore 612, 618
        }
    }
}
